
package webservices;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import net.java.dev.jaxb.array.IntArray;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TriquiWebService", targetNamespace = "http://webservices/")
@XmlSeeAlso({
    net.java.dev.jaxb.array.ObjectFactory.class,
    webservices.ObjectFactory.class
})
public interface TriquiWebService {


    /**
     * 
     * @param seudoname
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://webservices/", className = "webservices.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://webservices/", className = "webservices.LoginResponse")
    @Action(input = "http://webservices/TriquiWebService/loginRequest", output = "http://webservices/TriquiWebService/loginResponse")
    public boolean login(
        @WebParam(name = "seudoname", targetNamespace = "")
        String seudoname);

    /**
     * 
     * @param logout
     */
    @WebMethod
    @RequestWrapper(localName = "logout", targetNamespace = "http://webservices/", className = "webservices.Logout")
    @ResponseWrapper(localName = "logoutResponse", targetNamespace = "http://webservices/", className = "webservices.LogoutResponse")
    @Action(input = "http://webservices/TriquiWebService/logoutRequest", output = "http://webservices/TriquiWebService/logoutResponse")
    public void logout(
        @WebParam(name = "logout", targetNamespace = "")
        String logout);

    /**
     * 
     * @param userPlayed
     * @param posJ
     * @param posI
     * @param creator
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "play", targetNamespace = "http://webservices/", className = "webservices.Play")
    @ResponseWrapper(localName = "playResponse", targetNamespace = "http://webservices/", className = "webservices.PlayResponse")
    @Action(input = "http://webservices/TriquiWebService/playRequest", output = "http://webservices/TriquiWebService/playResponse")
    public boolean play(
        @WebParam(name = "creator", targetNamespace = "")
        String creator,
        @WebParam(name = "userPlayed", targetNamespace = "")
        boolean userPlayed,
        @WebParam(name = "posI", targetNamespace = "")
        int posI,
        @WebParam(name = "posJ", targetNamespace = "")
        int posJ);

    /**
     * 
     * @param gameCreator
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPlayerInTurn", targetNamespace = "http://webservices/", className = "webservices.GetPlayerInTurn")
    @ResponseWrapper(localName = "getPlayerInTurnResponse", targetNamespace = "http://webservices/", className = "webservices.GetPlayerInTurnResponse")
    @Action(input = "http://webservices/TriquiWebService/getPlayerInTurnRequest", output = "http://webservices/TriquiWebService/getPlayerInTurnResponse")
    public int getPlayerInTurn(
        @WebParam(name = "gameCreator", targetNamespace = "")
        String gameCreator);

    /**
     * 
     * @param creator
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRoomParticipants", targetNamespace = "http://webservices/", className = "webservices.GetRoomParticipants")
    @ResponseWrapper(localName = "getRoomParticipantsResponse", targetNamespace = "http://webservices/", className = "webservices.GetRoomParticipantsResponse")
    @Action(input = "http://webservices/TriquiWebService/getRoomParticipantsRequest", output = "http://webservices/TriquiWebService/getRoomParticipantsResponse")
    public List<String> getRoomParticipants(
        @WebParam(name = "creator", targetNamespace = "")
        String creator);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://webservices/", className = "webservices.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://webservices/", className = "webservices.HelloResponse")
    @Action(input = "http://webservices/TriquiWebService/helloRequest", output = "http://webservices/TriquiWebService/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param seudoname
     */
    @WebMethod
    @RequestWrapper(localName = "createRoom", targetNamespace = "http://webservices/", className = "webservices.CreateRoom")
    @ResponseWrapper(localName = "createRoomResponse", targetNamespace = "http://webservices/", className = "webservices.CreateRoomResponse")
    @Action(input = "http://webservices/TriquiWebService/createRoomRequest", output = "http://webservices/TriquiWebService/createRoomResponse")
    public void createRoom(
        @WebParam(name = "seudoname", targetNamespace = "")
        String seudoname);

    /**
     * 
     * @param joiner
     * @param creator
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "joinRoom", targetNamespace = "http://webservices/", className = "webservices.JoinRoom")
    @ResponseWrapper(localName = "joinRoomResponse", targetNamespace = "http://webservices/", className = "webservices.JoinRoomResponse")
    @Action(input = "http://webservices/TriquiWebService/joinRoomRequest", output = "http://webservices/TriquiWebService/joinRoomResponse")
    public String joinRoom(
        @WebParam(name = "creator", targetNamespace = "")
        String creator,
        @WebParam(name = "joiner", targetNamespace = "")
        String joiner);

    /**
     * 
     * @param playerWantingToLeave
     * @param creator
     */
    @WebMethod
    @RequestWrapper(localName = "leaveRoom", targetNamespace = "http://webservices/", className = "webservices.LeaveRoom")
    @ResponseWrapper(localName = "leaveRoomResponse", targetNamespace = "http://webservices/", className = "webservices.LeaveRoomResponse")
    @Action(input = "http://webservices/TriquiWebService/leaveRoomRequest", output = "http://webservices/TriquiWebService/leaveRoomResponse")
    public void leaveRoom(
        @WebParam(name = "creator", targetNamespace = "")
        String creator,
        @WebParam(name = "playerWantingToLeave", targetNamespace = "")
        String playerWantingToLeave);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPlayers", targetNamespace = "http://webservices/", className = "webservices.GetPlayers")
    @ResponseWrapper(localName = "getPlayersResponse", targetNamespace = "http://webservices/", className = "webservices.GetPlayersResponse")
    @Action(input = "http://webservices/TriquiWebService/getPlayersRequest", output = "http://webservices/TriquiWebService/getPlayersResponse")
    public List<String> getPlayers();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRooms", targetNamespace = "http://webservices/", className = "webservices.GetRooms")
    @ResponseWrapper(localName = "getRoomsResponse", targetNamespace = "http://webservices/", className = "webservices.GetRoomsResponse")
    @Action(input = "http://webservices/TriquiWebService/getRoomsRequest", output = "http://webservices/TriquiWebService/getRoomsResponse")
    public List<String> getRooms();

    /**
     * 
     * @param gameCreator
     * @return
     *     returns java.util.List<net.java.dev.jaxb.array.IntArray>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGameBoard", targetNamespace = "http://webservices/", className = "webservices.GetGameBoard")
    @ResponseWrapper(localName = "getGameBoardResponse", targetNamespace = "http://webservices/", className = "webservices.GetGameBoardResponse")
    @Action(input = "http://webservices/TriquiWebService/getGameBoardRequest", output = "http://webservices/TriquiWebService/getGameBoardResponse")
    public List<IntArray> getGameBoard(
        @WebParam(name = "gameCreator", targetNamespace = "")
        String gameCreator);

    /**
     * 
     * @param gameCreator
     */
    @WebMethod
    @RequestWrapper(localName = "playAgain", targetNamespace = "http://webservices/", className = "webservices.PlayAgain")
    @ResponseWrapper(localName = "playAgainResponse", targetNamespace = "http://webservices/", className = "webservices.PlayAgainResponse")
    @Action(input = "http://webservices/TriquiWebService/playAgainRequest", output = "http://webservices/TriquiWebService/playAgainResponse")
    public void playAgain(
        @WebParam(name = "gameCreator", targetNamespace = "")
        String gameCreator);

}
